managed;
strict ( 2 );

//Root Entity
define behavior for ZATS_RP_TRAVEL alias Travle

// Make behavour pool for travel entity
implementation in class zbp_ats_rp_travel unique

persistent table /dmo/travel_m
lock master
authorization master ( instance )
etag master LastChangedAt

//Early Numbering
early numbering
{
  create ( authorization : global );
  update;
  delete;

  //Dynamic Feature Control
  association _Booking { create(features : instance); }

  //Static Feature control
  field(readonly) TravelId, CreatedBy, CreatedAt, LastChangedAt, LastChangedBy;
  field(mandatory) AgencyId, CustomerId, BeginDate, EndDate, overallstatus, BookingFee, CurrencyCode;


  //Data action to copy BO data
  factory action copyTravel[1]; //Data Action - Factory Data (Instance)

  mapping for /dmo/travel_m
    {
      TravelId      = travel_id;    //key
      AgencyId      = agency_id;
      CustomerId    = customer_id;
      BeginDate     = begin_date;
      EndDate       = end_date;
      TotalPrice    = total_price;
      BookingFee    = booking_fee;
      CurrencyCode  = currency_code;
      Description   = description;
      OverallStatus = overall_status;
      CreatedBy     = created_by;
      LastChangedBy = last_changed_by;
      CreatedAt     = created_at;
      LastChangedAt = last_changed_at;
    }
}



//Child for Travel
define behavior for ZATS_RP_BOOKING alias Booking

// Make behavour pool for booking entity
implementation in class zbp_ats_rp_booking unique

persistent table /dmo/booking_m
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt

//Early Numbering
early numbering
{
  update;
  delete;

  //Static Feature control
  field ( readonly ) TravelId, BookingId;
  field ( mandatory ) CarrierId, ConnectionId, FlightDate, BookingStatus;

  association _Travel;
  association _BookingSupp { create; }

  mapping for /dmo/booking_m
    {
      TravelId      = travel_id;    //key
      BookingId     = booking_id;    //key
      BookingDate   = booking_date;
      CustomerId    = customer_id;
      CarrierId     = carrier_id;
      ConnectionId  = connection_id;
      FlightDate    = flight_date;
      FlightPrice   = flight_price;
      CurrencyCode  = currency_code;
      BookingStatus = booking_status;
      LastChangedAt = last_changed_at;
    }
}


//Child for Booking
define behavior for ZATS_RP_BOOKSUPPL alias BookSuppl

// Make behavour pool for booking suppliment entity
implementation in class zbp_ats_rp_BookSuppl unique


persistent table /dmo/booksuppl_m
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
early numbering
{
  update;
  delete;

  //Static Feature control
  field ( readonly ) TravelId, BookingId, BookingSupplementId;
  field ( mandatory ) Price, SupplementId;

  association _Travel;
  association _Booking;

  mapping for /dmo/booksuppl_m
    {
      TravelId            = travel_id;                //key
      BookingId           = booking_id;               //key
      BookingSupplementId = booking_supplement_id;   //key
      SupplementId        = supplement_id;
      Price               = price;
      CurrencyCode        = currency_code;
      LastChangedAt       = last_changed_at;
    }
}