managed implementation in class zbp_ats_rp_travel unique;
strict ( 2 );

//Root Entity
define behavior for ZATS_RP_TRAVEL alias Travle
persistent table /dmo/travel_m
lock master
authorization master ( instance )
etag master LastChangedAt
{
  create ( authorization : global );
  update;
  delete;
  //  field ( readonly ) TravelId;
  association _Booking { create; }

  mapping for /dmo/travel_m
    {
      TravelId      = travel_id;    //key
      AgencyId      = agency_id;
      CustomerId    = customer_id;
      BeginDate     = begin_date;
      EndDate       = end_date;
      TotalPrice    = total_price;
      BookingFee    = booking_fee;
      CurrencyCode  = currency_code;
      Description   = description;
      OverallStatus = overall_status;
      CreatedBy     = created_by;
      LastChangedBy = last_changed_by;
      CreatedAt     = created_at;
      LastChangedAt = last_changed_at;
    }
}



//Child for Travel
define behavior for ZATS_RP_BOOKING alias Booking
persistent table /dmo/booking_m
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
{
  update;
  delete;
  //  field ( readonly ) TravelId, BookingId;
  field ( readonly ) TravelId;
  association _Travel;
  association _BookingSupp { create; }

  mapping for /dmo/booking_m
    {
      TravelId      = travel_id;    //key
      BookingId     = booking_id;    //key
      BookingDate   = booking_date;
      CustomerId    = customer_id;
      CarrierId     = carrier_id;
      ConnectionId  = connection_id;
      FlightDate    = flight_date;
      FlightPrice   = flight_price;
      CurrencyCode  = currency_code;
      BookingStatus = booking_status;
      LastChangedAt = last_changed_at;
    }
}


//Child for Booking
define behavior for ZATS_RP_BOOKSUPPL alias BookSuppl
persistent table /dmo/booksuppl_m
lock dependent by _Travel
authorization dependent by _Travel
etag master LastChangedAt
{
  update;
  delete;
  //  field ( readonly ) TravelId, BookingId, BookingSupplementId;
  field ( readonly ) TravelId, BookingId;
  association _Travel;
  association _Booking;

  mapping for /dmo/booksuppl_m
    {
      TravelId            = travel_id;                //key
      BookingId           = booking_id;               //key
      BookingSupplementId = booking_supplement_id;   //key
      SupplementId        = supplement_id;
      Price               = price;
      CurrencyCode        = currency_code;
      LastChangedAt       = last_changed_at;
    }
}